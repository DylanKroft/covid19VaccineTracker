{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/App.js\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup } from \"react-simple-maps\";\nimport { toast } from \"react-toastify\";\nimport { CountriesMasterList } from \"../../shared/data-factory.js\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport const MapChart = ({\n  setTooltipContent,\n  setSelectedCountry,\n  selectedCountry\n}) => {\n  const handleCountryClick = (NAME, ISO_A3) => {\n    if (CountriesMasterList.find(country => {\n      return country.iso_code === ISO_A3;\n    })) {\n      setSelectedCountry({\n        name: NAME,\n        iso_code: ISO_A3\n      });\n    } else {\n      toast(\"Looks like there isn't public vaccine data available for  \" + NAME + \" yet!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      width: \"1150\",\n      height: \"800\",\n      projectionConfig: {\n        scale: 260\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onClick: () => {\n              const {\n                NAME,\n                ISO_A3\n              } = geo.properties;\n              handleCountryClick(NAME, ISO_A3);\n            },\n            onMouseEnter: () => {\n              const {\n                NAME\n              } = geo.properties;\n              setTooltipContent(`${NAME}`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: selectedCountry.iso_code === geo.properties.ISO_A3 ? {\n              default: {\n                fill: \"#2E9BFF\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#2E9BFF\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#2E9BFF\",\n                outline: \"none\"\n              }\n            } : {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#D4EBFF\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#2E9BFF\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), CountriesMasterList.map(({\n          location,\n          coordinates\n        }) => /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: coordinates,\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            fill: \"none\",\n            stroke: \"#00C63F\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            transform: \"scale(0.5) translate(-12, -24)\",\n            style: {\n              pointerEvents: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"10\",\n              r: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, location, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/App.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","ZoomableGroup","toast","CountriesMasterList","geoUrl","MapChart","setTooltipContent","setSelectedCountry","selectedCountry","handleCountryClick","NAME","ISO_A3","find","country","iso_code","name","scale","geographies","map","geo","properties","default","fill","outline","hover","pressed","rsmKey","location","coordinates","pointerEvents"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { toast } from \"react-toastify\";\nimport { CountriesMasterList } from \"../../shared/data-factory.js\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nexport const MapChart = ({\n  setTooltipContent,\n  setSelectedCountry,\n  selectedCountry,\n}) => {\n  const handleCountryClick = (NAME, ISO_A3) => {\n    if (\n      CountriesMasterList.find((country) => {\n        return country.iso_code === ISO_A3;\n      })\n    ) {\n      setSelectedCountry({\n        name: NAME,\n        iso_code: ISO_A3,\n      });\n    } else {\n      toast(\n        \"Looks like there isn't public vaccine data available for  \" +\n          NAME +\n          \" yet!\"\n      );\n    }\n  };\n  return (\n    <>\n      <ComposableMap\n        data-tip=\"\"\n        width=\"1150\"\n        height=\"800\"\n        projectionConfig={{ scale: 260 }}\n      >\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onClick={() => {\n                    const { NAME, ISO_A3 } = geo.properties;\n                    handleCountryClick(NAME, ISO_A3);\n                  }}\n                  onMouseEnter={() => {\n                    const { NAME } = geo.properties;\n                    setTooltipContent(`${NAME}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={\n                    selectedCountry.iso_code === geo.properties.ISO_A3\n                      ? {\n                          default: {\n                            fill: \"#2E9BFF\",\n                            outline: \"none\",\n                          },\n                          hover: {\n                            fill: \"#2E9BFF\",\n                            outline: \"none\",\n                          },\n                          pressed: {\n                            fill: \"#2E9BFF\",\n                            outline: \"none\",\n                          },\n                        }\n                      : {\n                          default: {\n                            fill: \"#D6D6DA\",\n                            outline: \"none\",\n                          },\n                          hover: {\n                            fill: \"#D4EBFF\",\n                            outline: \"none\",\n                          },\n                          pressed: {\n                            fill: \"#2E9BFF\",\n                            outline: \"none\",\n                          },\n                        }\n                  }\n                />\n              ))\n            }\n          </Geographies>\n          {CountriesMasterList.map(({ location, coordinates }) => (\n            <Marker key={location} coordinates={coordinates}>\n              <g\n                fill=\"none\"\n                stroke=\"#00C63F\"\n                strokeWidth=\"3\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                transform=\"scale(0.5) translate(-12, -24)\"\n                style={{ pointerEvents: \"none\" }}\n              >\n                <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n              </g>\n            </Marker>\n          ))}\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}