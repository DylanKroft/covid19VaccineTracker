{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/components/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport './MapChart.css';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport * as d3 from 'd3';\nimport ReactTooltip from \"react-tooltip\";\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup } from \"react-simple-maps\";\nlet root = document.documentElement;\nconst width = window.screen.width;\nconst height = window.screen.height;\nconst suffix = \"px\" || '';\nlet totVaxed;\ndocument.documentElement.style.setProperty(`--height`, height + suffix);\ndocument.documentElement.style.setProperty(`--width`, width + suffix);\nconst colorScale = d3.scaleLinear().domain([0, 0.5, 1, 3, 5, 10, 30, 100]).range(['#d8e3ec', '#7DE1FF', '#b1c6d9', '#9db8cf', '#89aac5', '#769cbc', '#628db2', '#4f7fa9']);\nconst url = \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({\n  setTooltipContent,\n  setSelectedCountry,\n  selectedCountry\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(url).then(data => {\n      setData(data);\n      const totVaxedObj = data.slice().reverse().find(s => s.iso_code === \"OWID_WRL\");\n      totVaxed = totVaxedObj[\"people_vaccinated_per_hundred\"];\n      document.documentElement.style.setProperty(`--totVaxed`, totVaxed + \"%\");\n      document.getElementById(\"percentage\").innerHTML = totVaxed;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"Covid-19 Vaccination Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"progressBarContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"progressBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popVaxContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"percentage\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \"% of world vaccinated\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        width: \"1200\",\n        style: {\n          width: \"100%\"\n        },\n        \"data-tip\": \"\",\n        projectionConfig: {\n          scale: 200\n        },\n        id: \"map\",\n        children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n          center: [15, 0],\n          zoom: 1,\n          translateExtent: [[0, 0], [1250, height]],\n          children: /*#__PURE__*/_jsxDEV(Geographies, {\n            geography: geoUrl,\n            children: ({\n              geographies\n            }) => geographies.map(geo => {\n              const d = data.slice().reverse().find(s => s.iso_code === geo.properties.ISO_A3);\n              return /*#__PURE__*/_jsxDEV(Geography, {\n                onMouseEnter: () => {\n                  const {\n                    NAME,\n                    POP_EST\n                  } = geo.properties;\n                  setTooltipContent(`<b>${NAME}<b> <br /> ${d === undefined ? \"N/A\" : d[\"people_vaccinated_per_hundred\"]}`);\n                },\n                onMouseLeave: () => {\n                  setTooltipContent(\"\");\n                },\n                geography: geo,\n                fill: d ? colorScale(d[\"people_vaccinated_per_hundred\"]) : \"#F5F4F6\",\n                style: {\n                  default: {\n                    stroke: \"#808080\",\n                    strokeWidth: 0.75,\n                    outline: \"none\"\n                  },\n                  hover: {\n                    stroke: \"#808080\",\n                    strokeWidth: 2,\n                    outline: \"none\"\n                  },\n                  pressed: {\n                    stroke: \"#808080\",\n                    strokeWidth: 2,\n                    outline: \"none\"\n                  }\n                }\n              }, geo.rsmKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/components/MapChart.js"],"names":["React","useEffect","useState","csv","d3","ReactTooltip","ComposableMap","Geographies","Geography","Marker","ZoomableGroup","root","document","documentElement","width","window","screen","height","suffix","totVaxed","style","setProperty","colorScale","scaleLinear","domain","range","url","geoUrl","MapChart","setTooltipContent","setSelectedCountry","selectedCountry","data","setData","then","totVaxedObj","slice","reverse","find","s","iso_code","getElementById","innerHTML","scale","geographies","map","geo","d","properties","ISO_A3","NAME","POP_EST","undefined","default","stroke","strokeWidth","outline","hover","pressed","rsmKey"],"mappings":"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","sourcesContent":["import './MapChart.css';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport * as d3 from 'd3';\nimport ReactTooltip from \"react-tooltip\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup,\n} from \"react-simple-maps\";\n\nlet root = document.documentElement;\nconst width = window.screen.width;\nconst height = window.screen.height;\nconst suffix = \"px\" || '';\nlet totVaxed;\ndocument.documentElement.style.setProperty(`--height`, height + suffix);\ndocument.documentElement.style.setProperty(`--width`, width + suffix);\n\nconst colorScale = d3.scaleLinear()\n  .domain([0, 0.5, 1, 3, 5, 10, 30, 100])\n  .range(['#d8e3ec', '#7DE1FF', '#b1c6d9', '#9db8cf', '#89aac5', '#769cbc', '#628db2', '#4f7fa9']);\n\nconst url = \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst MapChart = ({\n  setTooltipContent,\n  setSelectedCountry,\n  selectedCountry,\n}) => { \n\nconst [data, setData] = useState([]);\n\n  useEffect(() => {\n      csv(url).then((data) => {\n        setData(data);\n        const totVaxedObj = data.slice().reverse().find((s) => s.iso_code === \"OWID_WRL\");\n        totVaxed = totVaxedObj[\"people_vaccinated_per_hundred\"];\n        document.documentElement.style.setProperty(`--totVaxed`, totVaxed + \"%\");\n        document.getElementById(\"percentage\").innerHTML = totVaxed\n\n      });\n    }, []);\n\n  return (\n    <div id=\"mainContainer\">\n      <div id=\"top\">\n        <h1 id=\"title\">Covid-19 Vaccination Tracker</h1>\n        <div id=\"progressBarContainer\">\n          <div id=\"progressBar\"></div>\n          <div id=\"popVaxContainer\"> \n            <div id=\"percentage\"> </div>\n            % of world vaccinated</div>\n        </div>\n      </div>\n      <div id=\"mapContainer\">\n      <ComposableMap \n        width=\"1200\" \n        style={{ width: \"100%\"}} \n        data-tip=\"\" \n        projectionConfig={{ scale: 200 }} \n        id=\"map\">\n        <ZoomableGroup \n        center = {[15,0]}\n          zoom={1}\n          translateExtent={[\n            [0, 0],\n            [1250, height]\n          ]}>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                const d = data.slice().reverse().find((s) => s.iso_code === geo.properties.ISO_A3);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n\n                    onMouseEnter={() => {\n                      const { NAME, POP_EST } = geo.properties;\n                      setTooltipContent(`<b>${NAME}<b> <br /> ${(d===undefined ? \"N/A\" : d[\"people_vaccinated_per_hundred\"])}`);\n                    }}\n\n                    onMouseLeave={() => {\n                      setTooltipContent(\"\");\n                    }}\n\n                    geography={geo}\n                    fill={d ? colorScale(d[\"people_vaccinated_per_hundred\"]) : \"#F5F4F6\"}\n                    style={{\n                      default: {\n                        stroke: \"#808080\",\n                        strokeWidth: 0.75,\n                        outline: \"none\"\n                      },\n                      hover: {\n                        stroke: \"#808080\",\n                        strokeWidth: 2,\n                        outline: \"none\"\n                      },\n                      pressed: {\n                        stroke: \"#808080\",\n                        strokeWidth: 2,\n                        outline: \"none\"\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n      <div id=\"bottom\"></div>\n    </div>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}