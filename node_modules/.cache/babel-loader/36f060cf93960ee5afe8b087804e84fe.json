{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport * as d3 from 'd3';\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup } from \"react-simple-maps\";\nimport React from 'react';\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch('https://api.npms.io/v2/search?q=react').then(response => response.json()).then(data => setTotalReactPackages(data.total)); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  const geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n  const colorScale = d3.scaleLinear().domain([0.29, 0.68]).range([\"#8AFFFF\", \"#007575\"]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Covid-19 Vaccination Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapContainer\",\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        width: \"1200\",\n        style: {\n          width: \"80%\"\n        },\n        \"data-tip\": \"\",\n        projectionConfig: {\n          scale: 200\n        },\n        id: \"map\",\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wgLpFAWSHe9QmX8KlMAZtxnJHM8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dylankroft/Documents/GitHub/Projects/vaxtrax/src/App.js"],"names":["useEffect","useState","csv","d3","ComposableMap","Geographies","Geography","Marker","ZoomableGroup","React","App","fetch","then","response","json","data","setTotalReactPackages","total","geoUrl","colorScale","scaleLinear","domain","range","setData","width","scale","geographies","map","geo","d","find","s","ISO3","properties","ISO_A3","rsmKey"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,aALF,QAMO,mBANP;AAM2B,OAAOC,KAAP,MAAkB,OAAlB;;AAI3B,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhBV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,qBAAqB,CAACD,IAAI,CAACE,KAAN,CAFvC,EAFc,CAMd;AACC,GAPM,EAOJ,EAPI,CAAT;AASA,QAAMC,MAAM,GACZ,wGADA;AAGA,QAAMC,UAAU,GAAGhB,EAAE,CAACiB,WAAH,GAChBC,MADgB,CACT,CAAC,IAAD,EAAO,IAAP,CADS,EAEhBC,KAFgB,CAEV,CAAC,SAAD,EAAY,SAAZ,CAFU,CAAnB;AAIA,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAAE,oBAAF,CAAH,CAA0BU,IAA1B,CAAgCG,IAAD,IAAU;AACvCQ,MAAAA,OAAO,CAACR,IAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAeA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA,4BACA;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,oBAAS,EAHX;AAIE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAJpB;AAKE,QAAA,EAAE,EAAC,KALL;AAAA,+BAOE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEP,MAAxB;AAAA,oBACG,CAAC;AAAEQ,YAAAA;AAAF,WAAD,KACCA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,IAAS;AACvB,kBAAMC,CAAC,GAAGd,IAAI,CAACe,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWJ,GAAG,CAACK,UAAJ,CAAeC,MAA3C,CAAV;AACA,gCACE,QAAC,SAAD;AAEE,cAAA,SAAS,EAAEN,GAFb;AAGE,cAAA,IAAI,EAAEC,CAAC,GAAGV,UAAU,CAACU,CAAC,CAAC,MAAD,CAAF,CAAb,GAA2B;AAHpC,eACOD,GAAG,CAACO,MADX;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlED;;GAAMzB,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport * as d3 from 'd3';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup,\n} from \"react-simple-maps\";import React from 'react';\n\n\n\nconst App = () => { \n  \n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch('https://api.npms.io/v2/search?q=react')\n        .then(response => response.json())\n        .then(data => setTotalReactPackages(data.total));\n\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, []);\n\n  const geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n  const colorScale = d3.scaleLinear()\n    .domain([0.29, 0.68])\n    .range([\"#8AFFFF\", \"#007575\"]);\n  \n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then((data) => {\n      setData(data);\n    });\n  }, []);\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div id=\"mainContainer\">\n    <div id=\"top\">\n      <h1>Covid-19 Vaccination Tracker</h1>\n    </div>\n    <div id=\"mapContainer\">\n      <ComposableMap \n        width=\"1200\" \n        style={{ width: \"80%\"}} \n        data-tip=\"\" \n        projectionConfig={{ scale: 200 }} \n        id=\"map\">\n\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const d = data.find((s) => s.ISO3 === geo.properties.ISO_A3);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}